{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omara\\\\OneDrive\\\\Escritorio\\\\pis5to\\\\rutas_evacuacion\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Markers from './Markers';\nimport placesData from '../assets/data.json';\nimport { useLocation } from 'react-router-dom';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = () => {\n  _s();\n  const {\n    places\n  } = placesData;\n  const [state, setState] = useState({\n    currentLocation: {\n      lat: '-4.029817',\n      lng: '-79.199492'\n    },\n    zoom: 20\n  });\n  const location = useLocation();\n  const [showAddNodeModal, setShowAddNodeModal] = useState(false);\n  const [nodeName, setNodeName] = useState('');\n  const [facultad, setFacultad] = useState('');\n  // ... otros estados para los datos del nodo\n\n  const handleAddNode = () => {\n    // Lógica para enviar los datos del nodo\n    setShowAddNodeModal(false);\n    // ... lógica para enviar datos a backend o realizar acciones necesarias\n  };\n\n  // Lógica y estados similares para Agregar Ruta y Agregar Brigadista\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-menu\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowAddNodeModal(true),\n        children: \"Agregar Nodo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: state.currentLocation,\n      zoom: state.zoom,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"OpenStreetMap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Markers, {\n        places: places\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddNodeModal,\n      onHide: () => setShowAddNodeModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Agregar Nodo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"nodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nombre del Nodo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Nombre\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddNode,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"EyM0icrsMI4jfD7I+5/s57PcMBM=\", false, function () {\n  return [useLocation];\n});\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Markers","placesData","useLocation","Modal","Button","Form","jsxDEV","_jsxDEV","MapView","_s","places","state","setState","currentLocation","lat","lng","zoom","location","showAddNodeModal","setShowAddNodeModal","nodeName","setNodeName","facultad","setFacultad","handleAddNode","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","center","url","attribution","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/omara/OneDrive/Escritorio/pis5to/rutas_evacuacion/src/components/MapView.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MapContainer, TileLayer } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport Markers from './Markers';\r\nimport placesData from '../assets/data.json';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nconst MapView = () => {\r\n    const { places } = placesData;\r\n    const [state, setState] = useState({\r\n        currentLocation: { lat: '-4.029817', lng: '-79.199492' },\r\n        zoom: 20,\r\n    });\r\n\r\n    const location = useLocation();\r\n\r\n    const [showAddNodeModal, setShowAddNodeModal] = useState(false);\r\n    const [nodeName, setNodeName] = useState('');\r\n    const [facultad, setFacultad] = useState('');\r\n    // ... otros estados para los datos del nodo\r\n\r\n    const handleAddNode = () => {\r\n        // Lógica para enviar los datos del nodo\r\n        setShowAddNodeModal(false);\r\n        // ... lógica para enviar datos a backend o realizar acciones necesarias\r\n    };\r\n\r\n    // Lógica y estados similares para Agregar Ruta y Agregar Brigadista\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"top-menu\">\r\n                <Button onClick={() => setShowAddNodeModal(true)}>Agregar Nodo</Button>\r\n                {/* Botones para Agregar Ruta y Agregar Brigadista */}\r\n            </div>\r\n\r\n            <MapContainer center={state.currentLocation} zoom={state.zoom}>\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution=\"OpenStreetMap\"\r\n                />\r\n                <Markers places={places} />\r\n            </MapContainer>\r\n\r\n            {/* Modales */}\r\n            <Modal show={showAddNodeModal} onHide={() => setShowAddNodeModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Agregar Nodo</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"nodeName\">\r\n                            <Form.Label>Nombre del Nodo</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Nombre\"\r\n                                value={nodeName}\r\n                                onChange={(e) => setNodeName(e.target.value)}\r\n                                required\r\n                            />\r\n                            {/* Agregar otros campos del formulario según los requisitos */}\r\n                        </Form.Group>\r\n                        <Button onClick={handleAddNode}>Enviar</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* Modales para Agregar Ruta y Agregar Brigadista */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}